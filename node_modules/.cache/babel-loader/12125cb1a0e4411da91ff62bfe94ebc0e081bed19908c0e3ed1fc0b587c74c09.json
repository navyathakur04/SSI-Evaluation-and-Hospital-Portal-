{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navya\\\\OneDrive\\\\Desktop\\\\minor\\\\src\\\\MainPage.js\",\n  _s = $RefreshSig$();\n// MainPage.js\nimport React, { useState, useEffect } from 'react';\nimport './MainPage.css';\nimport image1 from './image1.png';\nimport image2 from './image2.png';\nimport image3 from './image3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [image1, image2, image3];\nconst MainPage = () => {\n  _s();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImageIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1);\n    }, 3000); // Change slide every 3 seconds\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentImageIndex],\n        alt: \"slideshow\",\n        className: \"slide-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentImageIndex(currentImageIndex === 0 ? images.length - 1 : currentImageIndex - 1),\n        children: \"\\u276E \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentImageIndex(currentImageIndex === images.length - 1 ? 0 : currentImageIndex + 1),\n        children: \"\\u276F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"iwdYV/csWqs0gMEM0R8yiwCHnVs=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","image1","image2","image3","jsxDEV","_jsxDEV","images","MainPage","_s","currentImageIndex","setCurrentImageIndex","interval","setInterval","prevIndex","length","clearInterval","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/navya/OneDrive/Desktop/minor/src/MainPage.js"],"sourcesContent":["// MainPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './MainPage.css';\r\nimport image1 from './image1.png';\r\nimport image2 from './image2.png';\r\nimport image3 from './image3.png';\r\n\r\nconst images = [image1, image2, image3];\r\n\r\nconst MainPage = () => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) =>\r\n        prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 3000); // Change slide every 3 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"slideshow-container\">\r\n      <div className=\"slideshow\">\r\n        <img src={images[currentImageIndex]} alt=\"slideshow\" className=\"slide-image\" />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => setCurrentImageIndex(currentImageIndex === 0 ? images.length - 1 : currentImageIndex - 1)}>\r\n          &#10094; {/* Left arrow */}\r\n        </button>\r\n        <button onClick={() => setCurrentImageIndex(currentImageIndex === images.length - 1 ? 0 : currentImageIndex + 1)}>\r\n          &#10095; {/* Right arrow */}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAG,CAACL,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAEvC,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,oBAAoB,CAAEG,SAAS,IAC7BA,SAAS,KAAKP,MAAM,CAACQ,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC;IACH,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCZ,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBZ,OAAA;QAAKa,GAAG,EAAEZ,MAAM,CAACG,iBAAiB,CAAE;QAACU,GAAG,EAAC,WAAW;QAACH,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eACNlB,OAAA;MAAKW,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBZ,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAACD,iBAAiB,KAAK,CAAC,GAAGH,MAAM,CAACQ,MAAM,GAAG,CAAC,GAAGL,iBAAiB,GAAG,CAAC,CAAE;QAAAQ,QAAA,EAAC;MACvG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACTlB,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAACD,iBAAiB,KAAKH,MAAM,CAACQ,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGL,iBAAiB,GAAG,CAAC,CAAE;QAAAQ,QAAA,EAAC;MACvG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}